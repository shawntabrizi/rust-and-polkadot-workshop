diff --git a/src/main.rs b/src/main.rs
index d845743..60b086a 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -134,17 +134,47 @@ fn main() {
 		],
 	};
 
-	/*
-		TODO:
-		Create new block(s) which execute extrinsics for the new `ProofOfExistence` pallet.
-			- Make sure to set the block number correctly.
-			- Feel free to allow some extrinsics to fail, and see the errors appear.
-	*/
-
-	// Execute the extrinsics which make up our block.
+	let block_2 = types::Block {
+		header: support::Header { block_number: 2 },
+		extrinsics: vec![
+			support::Extrinsic {
+				caller: &"alice",
+				call: RuntimeCall::ProofOfExistence(proof_of_existence::Call::CreateClaim {
+					claim: &"Hello, world!",
+				}),
+			},
+			support::Extrinsic {
+				caller: &"bob",
+				call: RuntimeCall::ProofOfExistence(proof_of_existence::Call::CreateClaim {
+					claim: &"Hello, world!",
+				}),
+			},
+		],
+	};
+
+	let block_3 = types::Block {
+		header: support::Header { block_number: 3 },
+		extrinsics: vec![
+			support::Extrinsic {
+				caller: &"alice",
+				call: RuntimeCall::ProofOfExistence(proof_of_existence::Call::RevokeClaim {
+					claim: &"Hello, world!",
+				}),
+			},
+			support::Extrinsic {
+				caller: &"bob",
+				call: RuntimeCall::ProofOfExistence(proof_of_existence::Call::CreateClaim {
+					claim: &"Hello, world!",
+				}),
+			},
+		],
+	};
+
+	// Execute the extrinsics which make up our blocks.
 	// If there are any errors, our system panics, since we should not execute invalid blocks.
 	runtime.execute_block(block_1).expect("invalid block");
-	/* TODO: Execute your new block(s). */
+	runtime.execute_block(block_2).expect("invalid block");
+	runtime.execute_block(block_3).expect("invalid block");
 
 	// Simply print the debug format of our runtime state.
 	println!("{:#?}", runtime);
